
#include<iostream>
#include<vector>
#include<cstring>
#include<algorithm>
using namespace std;
typedef struct node
{
	int num;
	int sum;
	bool operator < (const node& x) const {
		return sum < x.sum;
	}
}DATA[20];
int A[25][25],B[26];
int main()
{
	DATA t;
	int n=1, a, b, c, d;
	int sum[20];
	while(1)
	{
		memset(A, 0, sizeof(A));
		cin >> n;
		if (n == 0)
			break;
		for (int i = 0; i < n; i++)
		{
			cin >> a >> b;
			for (int j = 0; j < b; j++)
			{
				cin >> c >> d;
				A[a][c] = d;
			}
		}
		int i, l, h;
		for (i = 0; cin >> h && h; i++)
		{
			t[i].num = h;
			t[i].sum = 0;
			for (int j = 1; j <= n; j++)
				cin >> B[j];
			for (int k = 1; k <= n; k++)
			{
				cin >> l;
				for (int j = 1; j <= n; j++)
				{
					t[i].sum += A[B[j]][l] * (abs(j - k) + 1);
				}
			}
		}
		sort(t, t + i);
		if(i!=0)
			cout << "Configuration Load" << endl;
		for (int j = 0; j < i-1; j++)
		{
			if (t[j].sum == t[j + 1].sum&&t[j].num > t[j + 1].num)
				swap(t[j], t[j + 1]);
			printf("%d %9d\n", t[j].num, t[j].sum);
		}
		printf("%d %9d\n", t[i-1].num, t[i-1].sum);
	} 
	return 0;
}

