
#include<cstdio>
#include<algorithm>
#include<cstring>
class Node {
public:
	int as, bs, sum;
	Node() { as = bs = sum = 0; }
};

Node arr[110];
Node dp[110];
Node total;
Node ret;
bool vis[110];

bool cmp(Node a, Node b) { 
	return a.sum>b.sum;
}

int Solve(int n) {
	memset(vis, true, sizeof(vis));
	std::sort(arr,arr+n,cmp);
	/*
	for (int i = 0; i < n; ++i)
		printf("%d %d %d\n", arr[i].as, arr[i].bs, arr[i].sum);
		*/
	ret = arr[0];
	bool update = true;
	while (update) {
		update = false;
		for (int i = 1; i < n; ++i)
			if (ret.as + arr[i].as >= 0 && ret.bs + arr[i].bs >= 0 && arr[i].sum >= 0 && vis[i])
			{
				//printf("%d %d %d\n", arr[i].as, arr[i].bs, arr[i].sum);
				vis[i] = false, update = true, ret.as += arr[i].as, ret.bs += arr[i].bs, ret.sum += arr[i].sum;
			}
	}
	return ret.as>=0&&ret.bs>=0?ret.sum:0;
}

int main() {
	//freopen("D://TestData/蓝桥/求最大值/input7.txt","r",stdin);
	int n;
	scanf("%d", &n);
	int len = 0;
	for (int i = 0; i < n; ++i) {
		scanf("%d%d", &arr[len].as, &arr[len].bs),arr[len].sum=arr[len].as+arr[len].bs;
		if (arr[len].as>0||arr[len].bs>0) {
			total.as+=arr[len].as,total.bs+=arr[len].bs,total.sum+=arr[len].sum;
			++len;
		}
	}
	int ans = Solve(len);
	if (total.as >= 0 && total.bs >= 0)printf("%d\n", std::max(ans,total.sum));
	else printf("%d\n",ans);
	return 0;
}

