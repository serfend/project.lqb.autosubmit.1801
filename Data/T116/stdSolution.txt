
#include <iostream>
#include <stdio.h>
#include <math.h>

using namespace std;

struct Point {
    int no;
    int x, y;

    double getDist(Point p) {
        return sqrt((x - p.x) * (x - p.x) + (y - p.y) * (y - p.y));
    }
};

Point ans[10];
int n, m, k;
Point person[50];
Point fire[25];
Point result[10];
bool repeat[50], ban[50];
double ansDist = 1000000000;
double minDist[50], sum = 0;
double G[50][25];

void dfs(int deep, int index)
{
    if(deep == k) {
        if(sum < ansDist) {
            ansDist = sum;
            for(int i = 0; i < k; i++) {
                ans[i] = result[i];
            }
        }
    } else {
        double tmpDist[50] = {0}, tsum = sum;
        bool flag2 = false;
        for(int i = 0; i < n; i++)
            tmpDist[i] = minDist[i];
        for(int i = m-k+deep; i >= index; i--) {
            if(repeat[i]) continue;
            if(deep > 0 && ban[i]) continue;
            bool flag = false;
            if(deep == 0) {
                sum = 0;
                for(int j = 0; j < n; j++) {
                    minDist[j] = G[j][i];
                    sum += G[j][i];
                }
                flag = true;
            }
            else {
                sum = tsum;
                for(int j = 0; j < n; j++) {
                    if(G[j][i] < tmpDist[j]) {
                        sum -= tmpDist[j] - G[j][i];
                        minDist[j] = G[j][i];
                        flag = true;
                    } else minDist[j] = tmpDist[j];
                }
            }
            if(flag) {
                flag2 = true;
                result[deep] = fire[i];
                dfs(deep+1, result[deep].no + 1);
            } else {
                ban[i] = true;
            }
        }
        if(flag2 == false) {
            result[deep] = fire[result[deep-1].no+1];
            dfs(deep+1, m-k+deep+1);
        } else {
            sum = tsum;
            for(int j = 0; j < n; j++) {
                minDist[j] = tmpDist[j];
            }
        }
    }
}


int main(int argc, char *argv[]) {
	 scanf("%d%d%d", &n, &m, &k);
    for(int i = 0; i < n; i++) {
        scanf("%d%d", &person[i].x, &person[i].y);
        minDist[i] = ansDist;
    }
    for(int i = 0; i < m; i++) {
        scanf("%d%d", &fire[i].x, &fire[i].y);
        fire[i].no = i;
    }
    for(int i = 0; i < m; i++) {
        if(!repeat[i]) {
            for(int j = i+1; j < m; j++)
                if(fire[i].x == fire[j].x && fire[i].y == fire[j].y)
                    repeat[j] = true;
        }
    }
    for(int i = 0; i < n; i++)
        for(int j = 0; j < m; j++)
            G[i][j] = person[i].getDist(fire[j]);
    dfs(0, 0);
    for(int i = 0; i < k; i++) {
        printf("%d ", ans[i].no+1);
    }
	return 0;
}

