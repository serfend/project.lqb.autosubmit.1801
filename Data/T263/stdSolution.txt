
#include <iostream>
#include <iomanip>
#include <queue>
#include <set>
#include <algorithm>
#include <cstdio>
#include <cstring>
#include <cmath>
using namespace std;
void s(long long a[][4],int x,int y)
{
    long long t=a[x][y];
    a[x][y]=a[y][x];
    a[y][x]=t;
}
long long gcd(long long a,long long b)
{
    long long c;
    while(b)
    {
        c=a%b;
        a=b;
        b=c;
    }
    return a;
}
int main()
{
    long long x,y,z;
    long long a[4][4];
    cin>>x>>y>>z;
    for(int i=1;i<4;i++)for(int j=1;j<4;j++)cin>>a[i][j];
    long long det=a[1][1]*(a[2][2]*a[3][3]-a[3][2]*a[2][3])-a[1][2]*(a[2][1]*a[3][3]-a[3][1]*a[2][3])+a[1][3]*(a[2][1]*a[3][2]-a[3][1]*a[2][2]);
    long long b[4][4];
    b[1][1]=a[2][2]*a[3][3]-a[3][2]*a[2][3];
    b[1][2]=-a[2][1]*a[3][3]+a[3][1]*a[2][3];
    b[1][3]=a[2][1]*a[3][2]-a[3][1]*a[2][2];
    b[2][1]=-a[1][2]*a[3][3]+a[3][2]*a[1][3];
    b[2][2]=a[1][1]*a[3][3]-a[3][1]*a[1][3];
    b[2][3]=-a[1][1]*a[3][2]+a[3][1]*a[1][2];
    b[3][1]=a[1][2]*a[2][3]-a[2][2]*a[1][3];
    b[3][2]=-a[1][1]*a[2][3]+a[2][1]*a[1][3];
    b[3][3]=a[1][1]*a[2][2]-a[2][1]*a[1][2];
    s(b,1,2);
    s(b,1,3);
    s(b,2,3);
    long long n1=x*b[1][1]+y*b[2][1]+z*b[3][1];
    long long n2=x*b[1][2]+y*b[2][2]+z*b[3][2];
    long long n3=x*b[1][3]+y*b[2][3]+z*b[3][3];
    if(det==0)
    {
        cout<<"NONE"<<endl;
        return 0;
    }
    else if(det<0)
    {
        n1=-n1;
        n2=-n2;
        n3=-n3;
        det=-det;
    }
    if(n1<0||n2<0||n3<0)
    {
        cout<<"NONE"<<endl;
        return 0;
    }
    long long gg=gcd(n1,gcd(n2,gcd(n3,det)));
    cout<<n1/gg<<' '<<n2/gg<<' '<<n3/gg<<' '<<det/gg<<endl;
    return 0;
}


