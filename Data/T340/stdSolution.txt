
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
struct sc
{
	int cnt, count;
	long long num[5001]; 
}p[5010];
struct sc2
{
	int cnt, count;
	long long num[200000];
}p1[2];
struct ms
{
	int id;
	long long num;
}ans[200000], t[200000];
int sta, end;
void merge(int x, int y)
{
	int mid = (x+y)>>1, i = x, j = mid+1, k = x;
	while(i != mid+1 && j != y+1)
	{
		if(ans[i].num > ans[j].num)
		{
			t[k].id = ans[j].id;
			t[k++].num = ans[j++].num;
		}
		else
		{
			t[k].id = ans[i].id;
			t[k++].num = ans[i++].num;
		}
	}
	while(i <= mid)
	{
		t[k].id = ans[i].id;
		t[k++].num = ans[i++].num;
	}
	while(j <= y)
	{
		t[k].id = ans[j].id;
		t[k++].num = ans[j++].num;
	}
	for(i = x; i <= y; ++i)
	{
		ans[i].id = t[i].id;
		ans[i].num = t[i].num;
	}
}
void mergesort(int x, int y)
{
	if(x < y)
	{
		int mid = (x+y)>>1;
		mergesort(x,mid);
		mergesort(mid+1,y);
		merge(x,y);
	}
}
int main()
{
		int n, i, j, k, l = 0, m, sum = 0;
		scanf("%d", &n);
		if( n == 2)
		{
			for(i = 0; i < n; ++i)
			{
				long long t1, t2, t3, t4;
				k = 0;
				scanf("%d %lld %lld %lld %lld", &m, &t1, &t2, &t3, &t4);
				l += m;
				p1[i].cnt = m;
				p1[i].count = 1;
				p1[i].num[0] = -1;
				p1[i].num[1] = t1;
				for(j = 2; j <= m; ++j)
				{
					p1[i].num[j] = (p1[i].num[j-1] * t2 + t3) % t4;
					if(p1[i].num[j] < p1[i].num[j-1])
					k++;
				}
				if(k > sum)
				sum = k;
			}
			printf("%d\n", sum);
			if(l <= 200000)
			{
				sta = 0;
				end = 0;
				while(end < l)
				{
					for(i = 0; i < n; ++i)
					{
						for(j = p1[i].count; j <= p1[i].cnt; ++j)
						{
							if(j != p1[i].count && p1[i].num[j] < p1[i].num[j-1])
							{
								p1[i].count = j;
								break;
							}
							ans[end].id = i;
							ans[end++].num = p1[i].num[j];
						}
						if(j > p1[i].cnt)//all ascending 
						p1[i].count = j;
					}
					mergesort(sta,end-1);
					sta = end;
				}
				for(i = 0; i < l; ++i)
				printf("%lld %d\n", ans[i].num, ans[i].id+1);
			}
		}
		else
		{
			for(i = 0; i < n; ++i)
			{
				long long t1, t2, t3, t4;
				k = 0;
				scanf("%d %lld %lld %lld %lld", &m, &t1, &t2, &t3, &t4);
				l += m;
				p[i].cnt = m;
				p[i].count = 1;
				p[i].num[0] = -1;
				p[i].num[1] = t1;
				for(j = 2; j <= m; ++j)
				{
					p[i].num[j] = (p[i].num[j-1] * t2 + t3) % t4;
					if(p[i].num[j] < p[i].num[j-1])
					k++;
				}
				if(k > sum)
				sum = k;
			}
			printf("%d\n", sum);
			if(l <= 200000)
			{
				sta = 0;
				end = 0;
				while(end < l)
				{
					for(i = 0; i < n; ++i)
					{
						for(j = p[i].count; j <= p[i].cnt; ++j)
						{
							if(j != p[i].count && p[i].num[j] < p[i].num[j-1])
							{
								p[i].count = j;
								break;
							}
							ans[end].id = i;
							ans[end++].num = p[i].num[j];
						}
						if(j > p[i].cnt)//all ascending 
						p[i].count = j;
					}
					mergesort(sta,end-1);
					sta = end;
				}
				for(i = 0; i < l; ++i)
				printf("%lld %d\n", ans[i].num, ans[i].id+1);
			}
		}
		
	return 0;
}

