
#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;
const int      MAXN = 101;

int       cnt[MAXN] = {0};
int to[102];
bool appeared[MAXN] = {0};

vector <int> tbl[MAXN];
vector <int> choice;

bool check(int tar)
{
	for(int i = tbl[tar].size()-1; i >= 0; i--)
	{
		int &j = tbl[tar][i];
		if(cnt[j] > 0)
		{
			cnt[j]--;
			if(check(j))
			{
				cnt[j]++;
				return false;
			}
			cnt[j]++;
		}
	}
	return true;
}

int main()
{
	int num;
	
	do
	{
		scanf("%d", &num);
		cnt[num]++;
	}
	while(getchar()!='\n');
	
	do
	{
		scanf("%d", &num);
		if (!appeared[num])
		{
			choice.push_back(num);
			appeared[num] = true;
		}
	}
	while(getchar()!='\n');
	
	for(int i = 1; i < MAXN; i++)
	{
		if(cnt[i] > 0)
		{
			for(int j = 1; j < MAXN; j++)
			{
				if( cnt[j]>0 && (i%j==0 || j%i==0) )
				{
					tbl[i].push_back(j);
				}
			}
		}
	}
	sort(choice.begin(), choice.end());
	
	int rec = -1;
	
	for (int i = 0; i < choice.size(); i++)
	{
		int &j = choice[i];
		cnt[j]--;
		
		int k;
		for(k=1;k<=100;k++)
		to[k]=cnt[k];
		for(k=1;k<=100;k++)
		{
			if(cnt[k]%2)cnt[k]=1;
			else cnt[k]=0;
		}
		
		if(check(j))
		{
			rec = j;
			break;
		}
		
		for(k=1;k<=100;k++)
		cnt[k]=to[k];
		
		cnt[j]++;
	}
	
	if(rec != -1)
		printf("%d",rec);
	else
		puts("-1");
	
	return 0;
}

