
#include <stdio.h>
#include <string.h>

typedef struct Node
{
	char str[30];
	int num;
}node;

char string[3000], tstr[30];
int maxlen;
node data[200];

int print(char str[])
{
	int len = strlen(str), i;
	for(i = len; i < maxlen; i++)
	{
		printf(" ");
	}
	for(i = 0; i < len; i++)
	{
		if(str[i] >= 'a' && str[i] <= 'z')
		{
			printf("%c", str[i]-'a'+'A');
		}
		else
		{
			printf("%c", str[i]);
		}
	}
	printf(":");
	return 0;
}

void change(char str[])
{
	int len = strlen(str), i;
	for(i = 0; i < len; i++)
	{
		if(str[i] >= 'a' && str[i] <= 'z')
		{
			str[i] = str[i]-'a'+'A';
		}
	}
}

int main()
{
	int len, n, top = 0, i, j, tlen;
	gets(string);
	len = strlen(string);
	maxlen = 0;
	for(i = 0; i < len; i++)
	{
		sscanf(&string[i], "%s%n", tstr, &n);
		tlen = n;
		if(tstr[n-1] == '.' || tstr[n-1] == ',')
		{
			tstr[n-1] = 0;
			tlen -= 1;
		}
		change(tstr);
		if(tlen > maxlen)
		{
			maxlen = tlen;
		}
		for(j = 0; j < top; j++)
		{
			if(!strcmp(data[j].str, tstr))
			{
				data[j].num++;
				break;
			}
		}
		if(j == top)
		{
			strcpy(data[top].str, tstr);
			data[top].num = 1;
			top++;
		}
		i += n;
	}
	for(i = 0; i < top; i++)
	{
		print(data[i].str);
		for(j = 0; j < data[i].num; j++)
		{
			printf("*");
		}
		printf("%d\n", data[i].num);
	}
	return 0;
}

